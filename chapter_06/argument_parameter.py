"""
함수 호출 시, 키워드 인자를 통해 원하는 파라미터에 값을 할당 할 수 있다.
"""
def f1(a, b, c):
    print(a, b, c)

f1(100, 200, 300)  # 100 200 300
f1(a=100, b=200, c=300)  # 100 200 300
f1(c=300, b=200, a=100)  # 100 200 300

"""
파라미터에는 기본 값을 할당하여, 인자를 생략할 수 있다.
"""
def f2(a=10, b=20, c=30):
    print(a, b, c)

f2(100, 200)  # 100 200 30

"""
함수를 선언할 때 기본 값이 없는 파라미터는 기본 값이 있는 파라미터 뒤에 올 수 없다.
"""
# def f4(a=10, b=20, c):
#     print(a, b, c)

def f4(a, b=20, c=30):
    print(a, b, c)

f4(100)  # 100 20 30

"""
함수 파라미터의 기본 값은 함수가 정의될 때 한번만 평가된다.
따라서 리스트와 같은 변경 가능한 객체를 기본 값으로 사용할 때 문제가 발생할 수 있다. <- 함수를 호출 할 때 같은 객체를 공유하여 사용하기 때문이다.
"""
def f5(value, lst=[]):
    lst.append(value)
    print(lst)

f5(3)  # [3]
f5(4)  # [3, 4]

def f6(value, lst=None):
    if lst is None:
        lst = []
    lst.append(value)
    print(lst)

f6(3)  # [3]
f6(4)  # [4]